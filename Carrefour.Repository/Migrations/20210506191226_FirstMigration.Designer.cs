// <auto-generated />
using System;
using Carrefour.Repository;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Carrefour.Repository.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20210506191226_FirstMigration")]
    partial class FirstMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Carrefour.Domain.Models.Configuration", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("XFactor")
                        .HasColumnType("int");

                    b.Property<int>("YFactor")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Configurations");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            XFactor = 1,
                            YFactor = 1
                        });
                });

            modelBuilder.Entity("Carrefour.Domain.Models.Customer", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("TotalXPoints")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            TotalXPoints = 200
                        },
                        new
                        {
                            ID = 2,
                            TotalXPoints = 400
                        },
                        new
                        {
                            ID = 3,
                            TotalXPoints = 600
                        });
                });

            modelBuilder.Entity("Carrefour.Domain.Models.Transaction", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CustomerID")
                        .HasColumnType("int");

                    b.Property<bool>("Expired")
                        .HasColumnType("bit");

                    b.Property<int>("SpentAmount")
                        .HasColumnType("int");

                    b.Property<int>("XPoints")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("CustomerID");

                    b.ToTable("Transactions");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CreatedDate = new DateTime(2021, 5, 6, 21, 12, 26, 308, DateTimeKind.Local).AddTicks(2327),
                            CustomerID = 1,
                            Expired = false,
                            SpentAmount = 500,
                            XPoints = 500
                        },
                        new
                        {
                            ID = 2,
                            CreatedDate = new DateTime(2021, 5, 6, 21, 12, 26, 308, DateTimeKind.Local).AddTicks(8380),
                            CustomerID = 1,
                            Expired = false,
                            SpentAmount = 300,
                            XPoints = 300
                        },
                        new
                        {
                            ID = 3,
                            CreatedDate = new DateTime(2021, 5, 6, 21, 12, 26, 308, DateTimeKind.Local).AddTicks(8395),
                            CustomerID = 2,
                            Expired = false,
                            SpentAmount = 600,
                            XPoints = 600
                        });
                });

            modelBuilder.Entity("Carrefour.Domain.Models.TransactionType", b =>
                {
                    b.Property<int>("ID")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("TransactionTypes");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Type = "Purchase"
                        },
                        new
                        {
                            ID = 2,
                            Type = "Redeem"
                        });
                });

            modelBuilder.Entity("Carrefour.Domain.Models.Transaction", b =>
                {
                    b.HasOne("Carrefour.Domain.Models.Customer", "Customer")
                        .WithMany("Transactions")
                        .HasForeignKey("CustomerID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Carrefour.Domain.Models.TransactionType", b =>
                {
                    b.HasOne("Carrefour.Domain.Models.Transaction", "Transaction")
                        .WithOne("Type")
                        .HasForeignKey("Carrefour.Domain.Models.TransactionType", "ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Transaction");
                });

            modelBuilder.Entity("Carrefour.Domain.Models.Customer", b =>
                {
                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("Carrefour.Domain.Models.Transaction", b =>
                {
                    b.Navigation("Type");
                });
#pragma warning restore 612, 618
        }
    }
}
